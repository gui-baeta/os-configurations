# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules =
    [ "nvme" "xhci_pci" "ahci" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/a1ff95cc-3c11-4074-9be9-ddcc55be8360";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-ea55a6bf-9a9e-4e32-9a5d-a29a06003366".device =
    "/dev/disk/by-uuid/ea55a6bf-9a9e-4e32-9a5d-a29a06003366";

  fileSystems."/other" = {
    device = "/dev/disk/by-uuid/dc05bff2-5953-4065-b614-0d5fc7ca926b";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-50eaf8fa-3241-4179-b7a2-bf4af9473cee".device =
    "/dev/disk/by-uuid/50eaf8fa-3241-4179-b7a2-bf4af9473cee";

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/C6E4-A7D7";
    fsType = "vfat";
  };

  swapDevices =
    [{ device = "/dev/disk/by-uuid/f25bce8d-ac81-4329-bb4e-beb76884c86f"; }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp9s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode =
    lib.mkDefault config.hardware.enableRedistributableFirmware;
}
